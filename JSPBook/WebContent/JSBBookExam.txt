┌─────────────────────────────────
│쉽게 배우는 JSP 웹 프로그래밍			  
│# 연습문제 주관식 정리						
│# 요약 정리를 기반으로 개념 정리 			
└─────────────────────────────────

01장 JSP 개요 : 원리를 이해하고 개발 환경 구축하기

	01. 정적 웹 페이지와 동적 웹 페이지의 차이점을 설명하시오.
	
		정적 웹 페이지는 컴퓨터에 저장된 텍스트 파일을 그대로 보는 것이고, 동적 웹 페이지는 저장된 내용을 다른 변수로 가공 처리하여 보는 것이다.
		정적 웹 페이지는 HTML(Hyper Text Markup Language)와 같은 웹 언어로 작성하고,
		동적 웹 페이지는 PHP(Personal Home Page), ASP(Active Server Page), JSP와 같은 웹 언어로 작성합니다.
		
		정적 웹 페이지는 미리 만들어놓은 정보만 보여주기 때문에 고객의 취향이나 변화에 적응할 수 없고,
		새로운 것을 추가, 수정, 삭제하는 작업을 모두 수동으로 처리해야 하므로 관리하기가 어렵습니다.
		하지만 동적인 요소가 없기 때문에 데이터베이스도 필요없고 구축하기 쉬우며, 단순 문서로만 이루어져 있어 서버 간에 통신이 거의 없고 속도가 빠름
		또한 정적 문서로만 이루어져 있기 때문에 모든 호스팅 서버에서도 동작할 수 있다는 장점입니다.
		그러나 기술이 발전함에 따라 사용자의 기호에 맞게 능동적으로 변화하는 웹 페이지가 필요해져서 이를 위해 동적 웹 페이지를 제공하는
		PHP, ASP, JSP와 같은 언어가 개발되었습니다.
		
		현재 우리가 보는 대부분의 웹 페이지는 동적 웹 페이지라고 할 수 있습니다.
		동적 웹 페이지는 사용자가 웹 페이지에 글을 작성하거나 환경 설정 등을 바꾸면 그 내용이 서버에 있는 데이터베이스에 저장되고
		결과가 웹 페이지에 반영되는 형태로 동작합니다.
		
	02. 웹 프로그래밍 언어 JSP의 특징을 설명하시오.
	
		1) JSP는 서블릿 기술의 확장입니다.
		
			JSP에서는 서블릿의 모든 시능을 사용할 수 있습니다.
			즉, 서블릿과 마찬가지로 JDBC, JDNI, EJB 등을 모두 포함하고 있는 강력한 엔터프라이즈 자바 API를 사용할 수 잇습니다
			또한 쉽게 개발할 수 있도록 JSP에서는 내장객체, 미리 정의된 태그, 표현긱 언어와 사용자 정의 태그를 사용할 수 있습니다,.
			
			*** JNDI이란?
			JNDI(Java Naming and Directory Interface)는 Java프로그래밍 언어를 사용하여 작성된 애플리케이션에 이름 지정 및
			디렉토리 기능을 제공하는 API입니다
			
			**EJB이란?
			EJB(Enterprise Java Bean)는 분산 애플리케이션을 지원하는 컴포넌트 기반의 규약
			
		2) JSP는 유지 관리가 용이합니다
			서블릿의 기술에는 프레젠테이션 로직과 비즈니스 로직이 섞여 있지만 JSP기술의 경우 프레젠테이션 로직과 비즈니스로직을 분리할 수 있기 
			때문에 관리하기가 쉽습니다.
			
		3) JSP는 빠른 개발이 가능합니다.
			코드를 수정했을 때, 서블릿에서는 업데이트를 하고 다시 컴파일 해야합니다. 그러나 JSP의 경우 다시 컴파일하고 프로젝트를 배포할 필요가 
			없습니다.
			
		4) JSP로 개발하면 코드 길이를 줄일 수 있습니다
			JSP에서는 다양한 액션태그, JSTL(JavaServer Pages Standard Tag Library), 사용자 정의 태그 등의 다양한 태그와 표현 언어,
			내장 객체 등을 사용함으로써 서블릿보다 코드를 줄일 수 있습니다.
			
	03. JSP 페이지의 처리과정을 설명하시오
		[책 24p 그림 참고] 또는 [ch02 JSP개요 PPT 9p 그림 참고]
		1) 웹 브라우저가 웹 서버에 JSP를 요청합니다.
			웹 서버는 요청에서 Hello.jsp에서 jsp확장자를 발견하여 JSP임을 확인하고 웹 서버에 있는 JSP 컨테이이너에 전달합니다.
		2) JSP컨테이너는 JSP테이지를 서블릿 프로그램인 Hello_jsp.java로 변환합니다.
		3) JSP 컨테이너는 서블릿 프로그램을 컴파일하여 Hello_jsp.class로 만들고 이를 웹 서버에 전달합니다.
		4) 웹 서버는 정적 웹 페이지처럼 *.class의 실행 결과를 웹 브라우저에 응답으로 전달함으로 웹 브라우저는 새로 가공된 HTML페이지를
			동적으로 처리한 결과를 보여줍니다.
		
02장 스크립트 태그 : 시작 페이지 만들기
   
   01. 스크립트 태그의 세 가지 종류에 대해 간단히 설명하시오.
   
      1) 선언문 태그
      
         	선언문 태그에 선언된 변수와 메소드는 JSP페이지 임의의 위치에서 선언할 수 있으며,
         	스크립틀릿 태그보다 나중에 선언해도 스크립틀릿 태그에서 사용할 수 있습니다.
         	선언문 태그로 선언된 변수는 전역 변수로 사용되고, 선언문 태그로 선언된 메소드는 전역 변수처럼 전역 메소드로 사용됩니다.
         
      2) 스크립틀릿 태그
      
         	스크립틀릿 태그는 out객체를 사용하지 않고도 쉽게 HTML 응답을 만들어낼 수 있습니다.
         	가장 일반적으로 사용되며 변수 또는 메소드 선언, 유효식 등 다수를 포함할 수 있습니다.
         	모든 텍스트, HTML 또는 JSP 요소는 스크립틀릿 태그 외부에 있어야합니다.
         
      3) 표현문 태그
      
         	표현문 태그를 이용하여 선언문 태그 또는 스크립틀릿 태그에서 선언된 변수나 메소드의 반환 값을 외부로 출력할 수 있습니다.
         	표현문 태그는 스크립틀릿 태그에서 사용할 수 없으므로 이 경우에는 out.println() 메소드를 사용해야 합니다.
         	표현문 태그에 숫자, 문자, 불린 등의 기본 데이터 타입과 자바 객체 타입도 사용 가능합니다.
         	그리고 표현문 태그에 작성된 모든 자바 코드의 값은 문자열로 변환되어 웹 브라우저에 출력됩니다.
         
   02. 선언문 태그와 스크립틀릿 태그의 차이점을 설명하시오.
   
      ────────────────────────────────────────────────────────────────────────────────────────────
                     선언문 태그                                                                       │            스크립틀릿 태그
      ────────────────────────────────────────────────────────────────────────────────────────────
         변수 뿐만 아니라 메소드를 선언할 수 있습니다.               │   메소드 없이 변수만을 선언할 수 있습니다.
         서블릿 프로그램으로 변환될 때, _jspService()메소드 .     │   서블릿 프로그램으로 변환될 때, _jspService()
         외부에 배치됩니다.                                │   메소드 내부에 배치됩니다.
      ────────────────────────────────────────────────────────────────────────────────────────────

   03. 애플리케이션 실행 결과에는 보이지 않는 JSP 주석 표기법은 무엇인가?
   
      <!-- HTML 주석 처리 내용 -->
      <%-- JSP 주석 처리 내용 --%>
		
03장 디렉티브 태그 : 한글 출력 및 페이지 모듈화 하기

	01. 디렉티브 태그의 세 가지 유형에 대해 간단히 설명하시오.
		1) Page       <%@ page ... %>     : JSP 페이지에 한 정보를 설정합니다.
		2) Include    <%@ include ... %>  : JSP 페이지의 특정 영역에 다른 문서를 포함합니다.
		3) Taglib	  <%@ taglib ... %>   : JSP 페이지에서 사용할 태그 라이브러리를 설정합니다.
				 
	02. JSP페이지가 사용할 자바 클래스를 설정하기 위한 page 디렉티브 태그의 속성은 무엇인가?
		- import
	
	03. JSP 페이지의 특정 영역에 외부 파일의 내용을 포함하는 디렉티브 태그는 무엇인가?
		- include
		
		
04장 액션 태그 : 상푸 목록 표시하기

	01. 자바빈즈
	
		JSP 페이지의 주요 기능 중 하나는 데이터를 보여주는 것입니다. 하나의 JSP 페이지에 데이터를 보여주기 위한 자바 코드와 
		단순히 화면을 출력하는 HTML 코드를 함께 작성하면 기능을 확장하거나 코드를 재사용하는데 어려움이 있습니다. 따라서 프로그램의 호율을 높이기 위해
		화면을 출력하는 부분과 데이터를 처리하는 로직 부분을 구분하여 작성하며, 로직 부분의 코드에 자바빈즈 클래스를 사용합니다.
		
		자바빈즈는 동적 콘텐프 개발을 취해  자바 코드를 사용하여 자바 클래스로 로직을 작성하는 방법입니다.
		즉, JSP페이지에서 화면을 표현하기 위함이나 계산식이나 자료의 처리를 담당하는 자바 코드를 따로 분리하여 작성한 것이 자바빈즈입니다.
		자바빈즈는 데이터 표현을 목적으로 하는 자바 클래스이므로 기존의 자바 클래스를 작성하는 방법과 동일하게 작성합니다.
		
		- VO와 같은 데이터를 저장한 클래스 공간에 해당합니다,
		- 추후 스프링에서 데이터를 바인딩할때 (데이터를 받아낼 때) VO, 즉 자바빈즈 클래스 객체 타입으로 데이터를 바로 받아낼 수 있습니다.
		
	02. 페이지 이동방식
	
		1) 포워드
			예를 들어 게시판 등록 페이지를 요청한다고 가정합시다.
			요청 URL이 http://localhost/board/form.do일 때, 서버로 넘어간 요청(request)에 해당하는 최종 목적지(servlet)이 있고
			그 안에서 등록 폼에 해당하는 페이지를 요청하는 기능이 실행된다.
			요청 URL에 매핑되는 서버 내 리소스(/WEB-INF/view/board/form.jsp)는 보안 폴더에 해당하는 '/WEB-INF'안에 있으므로
			서버안에서 응답으로 나가야할 페이지를 찾아서 결과물을 만들고 응답으로 브라우저 쪽으로 던져주는데 이과정이 페이지 이동방식 포워드!
			포워드는 서버로 들어온 요청과 요청에 의한 처리가 완료된 후 응답으로 나가는 횟수가 각 1개씩 존재한다.
			만약에 서버로 들어올 때 데이터1개 또는 2개 이상을 갖고 들어왔을 때 포워드는 새로운 요청이 만들어져 응답으로 나가는 형태가 아니므로
			같은 요청 객체를 확용하여 데이터를 담아 응답으로 내보낼 수 있고 처음에 요청으로 들어온 데이터를 응답에서 또한 활용가능!
			
		2) 리다이렉트
			예를 들어 게시판 등록 페이지를 요청한다고 가정합시다. 
			요청 URL이 http://localhost/board/insert.do일때, 서버로 넘어간 요청(request)에 해당하는 최종 목적지(servlet)이 있고
			이 떄 등록 기능에 대한 데이터 처리 후 페이지 이동방식을 선택하여 응답으로 나가야하는데, 응답으로 나갈 페이지가 데이터 처리 후 목록 화면이라고 가정했을때
			시스템이 알아서 브라우저로 300번대 ACK 신호로 "데이터 처리 끝났고 목록 화면으로 넘어가려고 하는데 진짜 목록 화면으로 넘어가며 됨?"이라고 물어본다.
			브라우저는 서버가 300번대로 준 신호에 "응 나 목록 화면 가는거 맞고 그러니까 내가 다시 목록 화면 요청 할거니까 목록 화면 응답으로 주삼"이라고 하며
			서버로 새로운 요청으로 http://localhost/board/list.do를 요청하여 목록 화면을 달라고 서버로 요청한다. 서버는 다시 들어온 새로운 요청에
			의해 목록 화면을 서버 안에서 찾아 결과의 리소스를 만들어 응답으로 내보낸다. 이때 최초 요청은 등록 기능을 가진 URL이었지만 응답을 나가는 건 목록을 요청할 때
			사용하는 요청URL이 되고 응답 화면은 목록 화면이 나간다.
			
				** 데이터 처리 후 포워딩을 하면?
				데이터 처리 후 리다이렉트 하지 않고 포워딩을 할 때 문제점은, 포워딩의 특징은 최초 요청 URL이 고정되고 선택된 응답 페이지가
				결과로 나가기 때문에 다시 새로 고침을 할 경우 최초의 요청했던 기능을 담고 있는 URL이 실행된다.
				그렇게 되면 반복적인 데이터 처리 요청이 서버로 날라가는 것이기 때문에 요청자가 끝내지 않는 한 무한 반복으로 데이터 처리에 대한
				기능이 끝없이 요청될 수 있다. 그러므로 데이터 처리 후라면 페이지 이동방식은 포워딩이 아닌 리다이렉트 처리로 마무리한다.
				
05장 내장 객체 : 상품 상세 정보 표시하기

	01. 폼 페이지에서 입력된 데이터를 전달하는 요청 파라미터 값을  JSP 페이지로 가져오는 내장 객체는 무엇인지, 그리고 관련된 메소드에 대해 간단히 설명하시오.
		request 내장 객체
		1) getParameter(String name) 
			: String 반환
			: 요청 파라미터 이름이 name인 값을 전달받습니다.
		2) getParameterValues(String name) 
			: String[] 반환
			: 모든 요청 파라미터 이름이 name인 값을 배열 형태로 전달받습니다. 요청 파라미터 값이 없으면 null을 반환
		3) getParameterNames() 
			: Enumeration 반환
			: 모든 요청 파라미터의 이름과 값을 Enumeration 객체타입으로 전달 받습니다.
		4) getParameterMap() 
			: Map 반환
			: 모든 요청 파라미터의 이름과 값을 Map객체 타입으로 전달받습니다. (Map 객체 타입은 (파라미터 이름, 값)형식으로 구성됩니다.)
			
	02. 서버에서 웹 브라우저에 다른 페이지로 강제 이동하도록 명령하는 내장 객체와 관련된 메소드는 무엇인가?
		response 내장 객체
		1) sendRedirect(url) : void 반환 : 설정한 URL 페이지로 강제 이동합니다.
		
	03. 스크립트 태그의 표현문과 같이 데이터를 출력하는 내장 객체는 무엇인가?
		out 내장 객체
		
06장 폼 태그 : 상품 등록 페이지 만들기

	01. form 태그에서 사용하는 속성에 간단히 설명하시오
		1) action : 폼 데이터를 받아 처리하는 웹 페이지의 URL을 설정합니다.  
		2) method : 폼 데이터가 전송되는 HTTP 방식을 설정합니다.
		3) name : 폼을 식별하기위한 이름을 설정합니다.
		4) target : 폼 처리 결과의 응답을 실행할 프레임을 설정합니다.
		5) enctype : 폼을 전송하는 컨텐츠 타입 유형을 설정합니다.
		5) accept-charset : 폼 전송에 사용할 문자 인코딩을 설정합니다.
		
	02. form 태그 내에 중첩하여 사용하는 태그를 나열하고 설명하시오
		1) input 태그
			input 태그는 사용자가 텍스트 입력이나 선택 등을 다양하게 할 수 있도록 공간을 만드는 태그로 , 종료태그 없이 단독으로 사용가능
		2) select 태그
			select 태그는 여러 개의 항목이 나타나는 목록 상자에서 항목을 선택나는 태그
			시작 태그와 종료 태그가 있고, 리스트 박스에 여러 항목을 추가 삽입하기 위해 반드시 option 태그를 포함해야합니다.
		3) textarea 태그
			textarea 태그는 여러 중릐 텍스트를 입력할 수 있는 태그입니다. 입력 폼 태그 안에 사용된 태그와 띄어쓰기 그대로 출력됨
			
		위 3가지 요소는 input 요소에 해당하는 태그들입니다.
		form 태그를 활용함에 있어 가장 중요하고 데이터를 담당할 수 있는 태그에 속합니다.
		
	03. 폼 페이지에서 전송된 데이터를 전달받는 내장 객체와 관련된 메소드는 무엇인가?
		request 내장 객체
		1) getParameterNames() : Enumeration : 모든 입력 양식의 요청 파라미터 이름을 순서에 상관없이 Enumeration형태로 전달받는다.
		2) getParameter() : String : input 요소의 name을 key로 문자열 형식의 데이터를 전달받는다.
		3) getParameterValues() : String[] : input 요소의 name을 key로 여러 데이터를 배열 형식의 데이터로 전달받는다.
		
07장 파일 업로드 :  상품 이미지 등록하기
	01. 파일 업로드를 위한 form 태그 내에 반드시 설정해야하는 기법은 무엇인가?
		1) form 태그의 method 속성은 반드시 "POST"로 설정한다.
		2) form 태그의 enctype 속성은 반드시 'multipart/form-data'로 설정한다.
		3) form 태그의 action 속성은 파일 업로드를 처리할  JSP 파일로 설정한다. (JSP파일 또는 경로 또는 서버에 해당하는 URL)
		4) 파일 업로드를 위해 input 태그의 type 속성을 file로 설정한다. (여러 파일 설정시 multiple 속성을 부여)
		
	02. 파일을 서버에 업로드하는 처리 기법에 대해 설명하시오.
		** 우리는 Commons를 활용한 파일 업로드를 진행하므로 cors.jar을 활용한 파일 업로드를 진행하지 않는다.
		
		1) Commons-fileupload를 이용한 파일 업로드
			commons-fileupload를 이용하여 파일을 업로드하려면 먼저 Commons-fileupload패키지에 포함되어있는
			DiskFileUpload 객체를 생성한다. 생성된 객체를 통해 DiskFileUpload 클래스가 제공하는 메소드를 사용하여 웹 브라우저가 
			전송한 multipart/form-data유형의 요청 파라미터를 가져옵니다. 그러나 FileItem 클래스의 메소드를 사용하여 요청 파라미터가 
			일반 데이터인지 파일인지 분석 및 처리하여 파일을 업로드합니다.
		
08장 유효성 검사 :  상품 등록 데이터의 유효성 검사하기
	01. 유효성 검사란?
		유효성 거마는 사용자가 폼 페이지에서 입력한 데이터 값이 서버로 전송되기 전에 특정 규칙에 맞춰 입력되었는지 검증하는 것을 말합니다.
		
	02. 유효성 검사를 위한 두 가지 처리 기법을 간단히 설명하시오
		1) 기본 유효성 검사는 사용자가 폼페이지의 입력 항목에 입력한 데이터 값이 있는지 없는지 확인하고 데이터 길이, 숫자 등 기본적인 것이 맞는지 검사합니다.
		2) 데이터 형식 유효성 검사는 사용자가 폼 페이지의 입력 항목에 입력한 데이터 값이 특정 형태에 적합한지 검사하기 위한 정규 표현식을 사용하는 방법느올
			기본 유효성 검사보다 복잡합니다,
		
	03. 유효성 검사를 위한 핸들러 함수와 폼 페이지를 작성하는 기법을 설명하시오.
		1) input 태그의 type 속성 값이 submit인 경우 onclick 속성을 이용하여 핸들러 함수를 설정합니다. (위 이벤트는 불가- 컨트롤 제한있음)
			또는 form 태그의 onsubmit 속성 값에 설정합니다.
			**  우리는 input type 속성 값이 submit인 경우 버튼 내 click 이벤트를 가지고 컨트롤하지 않는다고 했습니다.
				우리가 생각하는 이벤트 컨트롤이 정말 쉽지 않기 때문에 submit 버튼에 클릭 이벤트를 주지 않고 준다 하더라도  form 태그를 활용한
				submit 이벤트로 컨트롤하겠다고 정의했습니다.
		2) 자바 스크립트를 이용하여 스크립트 태그 내에 핸들러 함수를 작성합니다.
		3) 폼 페이지에서 입력된 데이터 값을 핸들러 함수로 가져오기 위해 form태그의 name 속성 또는 forms 객체를 이용합니다.
			form 객체를 이용하는 경우, form 객체는 배열의 형태이기 때문에  length로 크기를 알 수 있고 배열 값인 index는 form태그가 
			나타나는 순서로 0부터 시작합니다.
			
10장 시큐리티 : 상품 등록 페이지의 보안 처리하기
	01. 시큐리티?
		시큐리티는 허가된 사용자만이 특정 웹 페이지에 접근 할 수 있도록 제한하는 보안 기능입니다.
		시큐리티는 사용자가 권한이 없는 데이터에 접근하는 것을 막거나 웹 공격자가 전송 데이터를 중간에 가로채는 것을 방지하는 등 중요한 역할을 합니다.
		
	02. 시큐리티의 두가지 기법에 대해 간단히 설명하시오
		1) 선언적 시큐리티
			웹 어플리케리션 배포 설명자(web.xml) 파일에 보안 구성을 작성하여 수행하는 방식입니다.
			web.xml 파일에는 보안 역할ㄹ, 보안 제약사항, 인증 처리 등을 설정하여 보안을 구성합니다,
			
		2) 프로그래밍적 시큐리티는 웹 애플리테이션의 보안을 위해 코드를 작성하여 사용자의 권한 부여를 처리나는 방식입낟,'
			선언적 시큐리티의 보안으로 출분하지 않을 때 request 내장 객체의 메소드를 사용하여 사용자를 승인하는 방법입니다
			
	03. form기반 인증 처리기법으로 로그인 페이지를 작성하는 방법을 설명하시오
		 1) form 태그의 action 속성 : j_security_check
		 2)사용자의 name 속성 : J_username
		 3) 비밀번호의name 속성 : J_password
		 
	04.
	
	
11장 예외처리
	01. 예외처리란?
		예외처리는 프로그램이 처리되는 동안 특정한 문제가 발생했을 때 처리를 중단하고 
		
	02. page 디렉티브 태그를 이용한 예외처리 기법에 사용되는 속성에 대해 설명
		1) errorPage 속성으로 오류 페이지 호출하기
		errorPage 속성은 오류 페이지를 
		
		
12장 필터 : 로그 기록하기
	01. 필터란?
		필터는 클라이언트와 서버 사이에서 request와 response 객체를 먼저 받아 사전/사후 작업 등 공통적으로 필요한 부분을 처리하는 것을 말한다.
		
	02. Filter 인터페이스에 있는 메소드의 종류와 기능을 설명하시오.
		init() : 필터 인스턴스의 초기화 메소드
		doFilter() : 필터 기능을 작성하는 메소드
		destroy() : 필터 인스턴스의 종료 전에 호출되는 메소드
		
	03. web.xml 파일에 필터를 구성하는 요소의 종류를 설명하시오.
		1) <filter>
			웹 어플리케이션에서 자바 필터와 매개변수를 설정하는데 사용
			<filter>
				<filter-name>필터 이름</filter-name>
				<filter-class>클래스 위치 및 이름(패키지 포함)</filter-class>
				[
					<init-param>
						<param-name>매개변수 이름</param-name>
						<param-value>매개변수 값</param-value>
					</init-param>
				]
			</filter>
		
		2) <filter-mapping>
		특정 리소스에 대해 어떤 필터를 사용할 지 설정하는데 사용
		<filter-mapping>
			<filter-name>필터 이름</filter-name>
		 	<url-pattern>요청 URL 패턴</url-pattern>
		</filter-mapping>
		















	